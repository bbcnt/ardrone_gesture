/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package madsdf.ardrone.gesture;

import static com.google.common.base.Preconditions.*;
import com.google.common.collect.Maps;
import java.awt.Color;
import java.util.Map;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;

/**
 *
 * @author julien
 */
public class TimeseriesChartFrame extends javax.swing.JFrame {
    private Map<Integer, TimeSeries> series;
    private JFreeChart chart;
    
    private final int NUM_VISIBLE = 100;
    
    private int counter = Integer.MIN_VALUE;
    /**
     * Creates new form DTWDistanceFrame
     */
    public TimeseriesChartFrame(String title,
                                String xAxisLabel, String yAxisLabel,
                                Integer[] seriesIDs,
                                String[] seriesNames) {
        initComponents();
        this.setTitle(title);
        
        checkState(seriesIDs.length == seriesNames.length);
        series = Maps.newHashMap();
        TimeSeriesCollection accelCol = new TimeSeriesCollection();
        for (int i = 0; i < seriesNames.length; ++i) {
            final TimeSeries s = new TimeSeries(seriesNames[i]);
            series.put(seriesIDs[i], s);
            accelCol.addSeries(s);
        }
        
        chart = ChartFactory.createTimeSeriesChart(
                title,
                xAxisLabel,
                yAxisLabel,
                accelCol,
                true,
                false,
                false);
        
        XYPlot plot = chart.getXYPlot();
        plot.setRangeGridlinesVisible(false);     // Hide the grid in the graph
        plot.setDomainGridlinesVisible(false);
        plot.setBackgroundPaint(Color.WHITE);
        ValueAxis axisAcc = plot.getDomainAxis();
        axisAcc.setTickMarksVisible(true);    // Define the tick count
        axisAcc.setMinorTickCount(10);
        axisAcc.setAutoRange(true);
        axisAcc.setFixedAutoRange(NUM_VISIBLE);     // Define the number of visible value
        axisAcc.setTickLabelsVisible(true);  // Hide the axis labels
        
        ChartPanel cPanel = (ChartPanel)chartPanel;
        cPanel.setChart(chart);
    }
    
    public void addToChart(Map<Integer, Float> data) {
        for (Map.Entry<Integer, Float> e : data.entrySet()) {
            series.get(e.getKey()).add(new FixedMillisecond(counter), e.getValue());
        }
        counter++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chartPanel = new ChartPanel(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartPanel;
    // End of variables declaration//GEN-END:variables
}
